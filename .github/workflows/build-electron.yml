name: Build Electron App

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [20]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build Vue app
      run: npm run build

    - name: Build Electron app
      env:
        ELECTRON_MIRROR: https://npmmirror.com/mirrors/electron/
        ELECTRON_CACHE: ${{ github.workspace }}/.cache/electron
        ELECTRON_BUILDER_CACHE: ${{ github.workspace }}/.cache/electron-builder
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          npm run electron:build:linux
        elif [ "${{ matrix.os }}" = "windows-latest" ]; then
          npm run electron:build:win
        elif [ "${{ matrix.os }}" = "macos-latest" ]; then
          npm run electron:build:mac
        fi

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: electron-build-${{ matrix.os }}-${{ matrix.node-version }}
        path: |
          release/
          dist/
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/*/release/*.exe
          artifacts/*/release/*.dmg
          artifacts/*/release/*.AppImage
          artifacts/*/release/*.zip
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
